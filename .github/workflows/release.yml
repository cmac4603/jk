---
name: Release
on:
  release:
    types: [created]

env:
  APP_NAME: jk

jobs:
  publish:
    name: "Publish cli for ${{ matrix.os }}, target: ${{ matrix.target }}"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    permissions:
      actions: write
      pull-requests: read
      contents: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: "x86_64-unknown-linux-gnu"
          - os: macos-latest
            target: "x86_64-apple-darwin"

    steps:
      - uses: actions/checkout@v4

      - name: Setup rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get install -y pkg-config \
            libssl-dev \
            libgpgme-dev

      - name: Set up Homebrew
        if: ${{ matrix.os == 'macos-latest' }}
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install Homebrew Bundler RubyGems
        if: ${{ matrix.os == 'macos-latest' }}
        run: brew install gpgme

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: Build binary
        run: cargo build -p jk --release

      - name: Attach binary to release
        uses: svenstaro/upload-release-action@v2
        env:
          RELEASE_VERSION: ${{ github.event.release.tag_name }}
        with:
          asset_name: ${{ env.APP_NAME }}-v${{ env.RELEASE_VERSION }}-${{ matrix.target }}
          file: target/release/${{ env.APP_NAME }}
          overwrite: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.RELEASE_VERSION }}
