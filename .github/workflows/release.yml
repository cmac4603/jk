---
name: Release
on:
  release:
    types: [created]
env:
  APP_NAME: jk
  RUST_TARGET_MUSL: "x86_64-unknown-linux-musl"
  RUST_TARGET_OSX: "x86_64-apple-darwin"
jobs:
  publish:
    name: "Publish cli for ${{ matrix.os }}, target: ${{ matrix.target }}"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    permissions:
      actions: write
      pull-requests: read
      contents: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: "x86_64-unknown-linux-musl"
          - os: macos-latest
            target: "x86_64-apple-darwin"

    steps:
      - uses: actions/checkout@v4

      - name: Install MUSL dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get install -y musl \
           musl-tools \
           pkg-config \
           libssl-dev \
           linux-musl-dev

      - name: Setup rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2

      - name: Build jk binary artifact
        id: build-cli-release-binary
        run: cargo build --target=${{ matrix.target }} -p ${{ env.APP_NAME }} --release

      - name: Attach binary to release
        uses: svenstaro/upload-release-action@v2
        env:
          RELEASE_VERSION: ${{ github.event.release.tag_name }}
        with:
          asset_name: ${{ env.APP_NAME }}-v${{ env.RELEASE_VERSION }}-${{ matrix.target }}
          file: target/${{ matrix.target }}/release/${{ env.APP_NAME }}
          overwrite: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.RELEASE_VERSION }}
